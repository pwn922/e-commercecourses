services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    networks:
      - app-network

  users-service:
    build:
      context: ./services/users-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres-users-service:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://users_service:password@postgres-users-service:5432/users_service?sslmode=disable
    networks:
      - app-network

  postgres-users-service:
    image: postgres:latest
    environment:
      POSTGRES_DB: users_service
      POSTGRES_USER: users_service
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
       test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
       interval: 10s
       timeout: 5s
       retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - app-network

volumes:
  postgres_users_data:
  rabbitmq_data:
  rabbitmq_log:

networks:
  app-network:
    driver: bridge
